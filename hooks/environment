#!/bin/bash
set -e -o pipefail -u

basedir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
credhelper="$basedir/git-credential-s3-secrets"
envscript_file=$(mktemp)

# Ensure cleanup on exit, even if something fails
trap 'rm -f "$envscript_file"' EXIT

# s3secrets-helper must be in PATH
if ! BUILDKITE_PLUGIN_S3_SECRETS_CREDHELPER="$credhelper" s3secrets-helper > "$envscript_file"; then
  echo "Error: s3secrets-helper failed" >&2
  exit 1
fi

env_before="$(env | sort)"
envscript_size=$(wc -c < "$envscript_file")
echo "Evaluating $envscript_size bytes of env from temporary file"
set -o allexport
source "$envscript_file"
set +o allexport

if [[ "${BUILDKITE_PLUGIN_S3_SECRETS_DUMP_ENV:-}" =~ ^(true|1)$ ]] ; then
  echo "~~~ Environment variables that were set" >&2;

  # Use temporary files to avoid ARG_MAX "Argument list too long" errors with massive secret datasets
  env_before_file=$(mktemp)
  env_after_file=$(mktemp)

  # Ensure cleanup of these temp files too
  trap 'rm -f "$envscript_file" "$env_before_file" "$env_after_file"' EXIT

  echo "$env_before" > "$env_before_file"
  env | sort > "$env_after_file"

  # Use comm with files instead of process substitution to handle large datasets
  comm -13 "$env_before_file" "$env_after_file" || true
fi
